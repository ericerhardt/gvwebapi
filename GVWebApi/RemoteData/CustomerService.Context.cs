//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GVWebapi.RemoteData
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CustomerPortalEntities : DbContext
    {
        public CustomerPortalEntities()
            : base("name=CustomerPortalEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<SurveyAnswer> SurveyAnswers { get; set; }
        public virtual DbSet<SurveyQuestion> SurveyQuestions { get; set; }
        public virtual DbSet<Survey> Surveys { get; set; }
        public virtual DbSet<SurveyWithAvg> SurveyWithAvgs { get; set; }
        public virtual DbSet<CostAvoidance> CostAvoidances { get; set; }
        public virtual DbSet<SurveyQuestionsWithAnswer> SurveyQuestionsWithAnswers { get; set; }
        public virtual DbSet<easylinkimport> easylinkimports { get; set; }
        public virtual DbSet<EasylinkImportHistory> EasylinkImportHistories { get; set; }
        public virtual DbSet<EasyLinkMapping> EasyLinkMappings { get; set; }
        public virtual DbSet<vw_SurveySummaryList> vw_SurveySummaryList { get; set; }
    
        public virtual ObjectResult<EasylinkReportByDate_Result> EasylinkReportByDate(Nullable<int> clientId, string startDate, string endDate)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("clientId", clientId) :
                new ObjectParameter("clientId", typeof(int));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EasylinkReportByDate_Result>("EasylinkReportByDate", clientIdParameter, startDateParameter, endDateParameter);
        }
    }
}
