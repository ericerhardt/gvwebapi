//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GVWebapi.RemoteData
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CoFreedomEntities : DbContext
    {
        public CoFreedomEntities()
            : base("name=CoFreedomEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<v_ARCustomers> v_ARCustomers { get; set; }
        public virtual DbSet<v_SCEquipmentPreview_Custom> v_SCEquipmentPreview_Custom { get; set; }
        public virtual DbSet<vw_ClientsOnContract> vw_ClientsOnContract { get; set; }
        public virtual DbSet<vw_ContractedPagesByDeviceTYpe_Cust> vw_ContractedPagesByDeviceTYpe_Cust { get; set; }
        public virtual DbSet<vw_csContractList> vw_csContractList { get; set; }
        public virtual DbSet<vw_CSQuarterlyHistory> vw_CSQuarterlyHistory { get; set; }
        public virtual DbSet<vw_CSQuarterlyHistoryByInvoice> vw_CSQuarterlyHistoryByInvoice { get; set; }
        public virtual DbSet<vw_csSCBillingContracts> vw_csSCBillingContracts { get; set; }
        public virtual DbSet<vw_CSServiceCallHistory> vw_CSServiceCallHistory { get; set; }
        public virtual DbSet<vw_CSServiceCallSummarybyPeriod> vw_CSServiceCallSummarybyPeriod { get; set; }
        public virtual DbSet<vw_customer_contacts> vw_customer_contacts { get; set; }
        public virtual DbSet<vw_CustomerLocations> vw_CustomerLocations { get; set; }
        public virtual DbSet<vw_CustomersOnContract> vw_CustomersOnContract { get; set; }
        public virtual DbSet<vw_EquipmentModels> vw_EquipmentModels { get; set; }
        public virtual DbSet<vw_GlobalView_Equipment> vw_GlobalView_Equipment { get; set; }
        public virtual DbSet<vw_PagesOnContract> vw_PagesOnContract { get; set; }
        public virtual DbSet<vw_REVisionDataImport> vw_REVisionDataImport { get; set; }
        public virtual DbSet<vw_RevisionHistory> vw_RevisionHistory { get; set; }
        public virtual DbSet<vw_RevisionHistoryCustomerName> vw_RevisionHistoryCustomerName { get; set; }
        public virtual DbSet<vw_RevisionInvoiceHistory> vw_RevisionInvoiceHistory { get; set; }
        public virtual DbSet<vw_REVisionInvoices> vw_REVisionInvoices { get; set; }
        public virtual DbSet<vw_RevisionMeterGroups> vw_RevisionMeterGroups { get; set; }
        public virtual DbSet<vw_ServiceCallandContact> vw_ServiceCallandContact { get; set; }
        public virtual DbSet<vw_WeeklyServiceCalls> vw_WeeklyServiceCalls { get; set; }
        public virtual DbSet<vw_admin_EquipmentList_MeterGroup> vw_admin_EquipmentList_MeterGroup { get; set; }
        public virtual DbSet<vw_admin_SCBillingMeters_MeterGroup> vw_admin_SCBillingMeters_MeterGroup { get; set; }
        public virtual DbSet<vw_admin_SCEquipments_22> vw_admin_SCEquipments_22 { get; set; }
        public virtual DbSet<vw_invoicedMeterGroups> vw_invoicedMeterGroups { get; set; }
        public virtual DbSet<SCBillingCycle> SCBillingCycles { get; set; }
        public virtual DbSet<SCContract> SCContracts { get; set; }
        public virtual DbSet<SCEquipmentCustomProperty> SCEquipmentCustomProperties { get; set; }
        public virtual DbSet<vw_GVDeviceAnalyzer> vw_GVDeviceAnalyzer { get; set; }
        public virtual DbSet<ARCustomer> ARCustomers { get; set; }
        public virtual DbSet<vw_maplocations> vw_maplocations { get; set; }
        public virtual DbSet<vw_AssetCountbyDeviceType_Cust> vw_AssetCountbyDeviceType_Cust { get; set; }
    
        public virtual ObjectResult<csDeviceVolumes_Result> csDeviceVolumes(Nullable<System.DateTime> vd_FromDate, Nullable<System.DateTime> vd_ToDate, string vs_DeviceID, Nullable<int> vs_CustomerID)
        {
            var vd_FromDateParameter = vd_FromDate.HasValue ?
                new ObjectParameter("vd_FromDate", vd_FromDate) :
                new ObjectParameter("vd_FromDate", typeof(System.DateTime));
    
            var vd_ToDateParameter = vd_ToDate.HasValue ?
                new ObjectParameter("vd_ToDate", vd_ToDate) :
                new ObjectParameter("vd_ToDate", typeof(System.DateTime));
    
            var vs_DeviceIDParameter = vs_DeviceID != null ?
                new ObjectParameter("vs_DeviceID", vs_DeviceID) :
                new ObjectParameter("vs_DeviceID", typeof(string));
    
            var vs_CustomerIDParameter = vs_CustomerID.HasValue ?
                new ObjectParameter("vs_CustomerID", vs_CustomerID) :
                new ObjectParameter("vs_CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<csDeviceVolumes_Result>("csDeviceVolumes", vd_FromDateParameter, vd_ToDateParameter, vs_DeviceIDParameter, vs_CustomerIDParameter);
        }
    
        public virtual ObjectResult<csDeviceVolumesGrid_Result> csDeviceVolumesGrid(Nullable<System.DateTime> vd_FromDate, Nullable<System.DateTime> vd_ToDate, string vs_DeviceID, Nullable<int> vs_CustomerID)
        {
            var vd_FromDateParameter = vd_FromDate.HasValue ?
                new ObjectParameter("vd_FromDate", vd_FromDate) :
                new ObjectParameter("vd_FromDate", typeof(System.DateTime));
    
            var vd_ToDateParameter = vd_ToDate.HasValue ?
                new ObjectParameter("vd_ToDate", vd_ToDate) :
                new ObjectParameter("vd_ToDate", typeof(System.DateTime));
    
            var vs_DeviceIDParameter = vs_DeviceID != null ?
                new ObjectParameter("vs_DeviceID", vs_DeviceID) :
                new ObjectParameter("vs_DeviceID", typeof(string));
    
            var vs_CustomerIDParameter = vs_CustomerID.HasValue ?
                new ObjectParameter("vs_CustomerID", vs_CustomerID) :
                new ObjectParameter("vs_CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<csDeviceVolumesGrid_Result>("csDeviceVolumesGrid", vd_FromDateParameter, vd_ToDateParameter, vs_DeviceIDParameter, vs_CustomerIDParameter);
        }
    
        public virtual int Web_SCInsertServiceCall(Nullable<int> equipmentID, string caller, string description, ObjectParameter callID,  Nullable<int> callTypeID, string userID,Nullable<DateTime> callDate)
        {
            var equipmentIDParameter = equipmentID.HasValue ?
                new ObjectParameter("EquipmentID", equipmentID) :
                new ObjectParameter("EquipmentID", typeof(int));
    
            var callerParameter = caller != null ?
                new ObjectParameter("Caller", caller) :
                new ObjectParameter("Caller", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            
            var callTypeIDParameter = callTypeID.HasValue ?
                new ObjectParameter("CallTypeID", callTypeID) :
                new ObjectParameter("CallTypeID", typeof(int));
    
           
            var callDateParameter = callDate.HasValue ?
                new ObjectParameter("CallDate", callDate) :
                new ObjectParameter("CallDate", typeof(System.DateTime));
    
            
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
           
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Web_SCInsertServiceCall", equipmentIDParameter, callerParameter, descriptionParameter, callID,   callTypeIDParameter,   callDateParameter,   userIDParameter );
        }
    }
}
